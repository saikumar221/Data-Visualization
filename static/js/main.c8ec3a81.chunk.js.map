{"version":3,"sources":["components/lineGraph.js","components/histogram.js","components/table.js","App.js","index.js"],"names":["lineGraph","props","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","options","scales","yAxes","scaleLabel","display","labelString","xAxes","barThickness","legend","height","histogram","useStyles","makeStyles","root","flexShrink","tableHead","page","color","border","padding","TablePaginationActions","classes","count","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","Math","ceil","CustomTable","React","useState","setPage","setRowsPerPage","TableContainer","Table","table","TableHead","TableRow","TableCell","align","TableBody","customers","slice","map","customer","component","scope","id","firstName","lastName","email","created","orders","TableFooter","TablePagination","rowsPerPageOptions","colSpan","length","newPage","onChangeRowsPerPage","parseInt","target","value","ActionsComponent","margin","App","setData","histogramData","Array","lineChartData","useEffect","json","getData","forEach","order","Date","getDay","price","xs","sm","md","lg","Card","CardHeader","title","Divider","CardContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8ec3a81.chunk.js","sourcesContent":["import {Line} from 'react-chartjs-2';\n\nfunction lineGraph(props) {\n    return (\n        <div>\n            <Line\n          data={{\n            labels: props.labels,\n           datasets: [\n             {\n               label: 'Total Price',\n               fill: false,\n               lineTension: 0,\n               backgroundColor: 'blue',\n               borderColor: 'blue',\n               borderWidth: 2,\n               data: props.data\n             }\n           ]\n         }}\n          options={{\n            scales: {\n              yAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Total Price'\n                }\n              }],\n              xAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Days'\n                },\n                barThickness: 10\n              }],\n            },\n            legend:{\n              display:false,\n            }\n          }}\n          height={200}\n        />\n        </div>\n    );\n\n}\n\nexport default lineGraph","import {Bar} from 'react-chartjs-2';\n\nfunction histogram(props) {\n    return (\n        <div>\n             <Bar\n              data={{\n                labels: props.labels,\n                datasets: [\n                  {\n                    label: 'Orders',\n                    backgroundColor: 'rgba(0,0,250)',\n                    data: props.data,\n                  }\n                ]\n              }}\n              height={200}\n              options={{\n                scales: {\n                  yAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Orders Count'\n                    }\n                  }],\n                  xAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Days'\n                    },\n                    barThickness: 10\n                  }],\n                },\n                legend: {\n                  display: false,\n                }\n              }}\n            />\n        </div>\n    );\n\n}\n\nexport default histogram","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n      flexShrink: 0,\n    },\n    tableHead: {\n        backgroundColor: '#f2f2f2',\n      },\n    page: {\n      color: 'blue',\n      border: '0.5px solid blue',\n      padding: '5px',\n    },\n  }));\n\nfunction TablePaginationActions(props) {\n    const classes = useStyles();\n    const { count, page, rowsPerPage, onChangePage } = props;\n  \n    const handleBackButtonClick = (event) => {\n      onChangePage(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event) => {\n      onChangePage(event, page + 1);\n    };\n  \n    return (\n      <div className={classes.root}>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n          <KeyboardArrowLeft />\n        </IconButton>\n        <span className={classes.page}>\n          {page + 1}\n        </span>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          <KeyboardArrowRight />\n        </IconButton>\n      </div>\n    );\n  }\n\n  \nfunction CustomTable(props) {\n    const classes = useStyles();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n   \n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n      };\n    \n      const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n      };\n    \n    return (\n        <div>\n              <TableContainer>\n                <Table className={classes.table} aria-label=\"custom pagination table\">\n                  <TableHead className={classes.tableHead}>\n                    <TableRow>\n                      <TableCell >ID</TableCell>\n                      <TableCell align=\"left\">First Name</TableCell>\n                      <TableCell align=\"left\">Last Name</TableCell>\n                      <TableCell align=\"left\">Email</TableCell>\n                      <TableCell align=\"left\">Created</TableCell>\n                      <TableCell align=\"left\">Orders</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {props.customers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((customer) => (\n                      <TableRow key={customer.id}>\n                        <TableCell component=\"th\" scope=\"row\" >\n                          {customer.id}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {customer.firstName}\n                        </TableCell>\n                        <TableCell  align=\"left\">\n                          {customer.lastName}\n                        </TableCell>\n                        <TableCell  align=\"left\">\n                          {customer.email}\n                        </TableCell><TableCell align=\"left\">\n                          {customer.created}\n                        </TableCell><TableCell  align=\"left\">\n                          {customer.orders}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination\n                        rowsPerPageOptions={[]}\n                        colSpan={5}\n                        count={props.customers.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                      />\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n        </div>\n    );\n\n}\n\nexport default CustomTable","import React from \"react\";\n\nimport json from './components/data/data.json';\nimport LineGraph from './components/lineGraph';\nimport Histogram from './components/histogram';\nimport Table from './components/table';\nimport  './App.css';\nimport { Col, Row } from \"react-flexbox-grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport Card from '@material-ui/core/Card';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '8px',\n    padding: '8px'\n  },\n  tableHead: {\n    backgroundColor: '#f2f2f2',\n  },\n});\n\n\nfunction App() {\n\n  const classes = useStyles();\n  \n  const [data, setData] = React.useState(null);\n\n  let labels = ['01', '02', '03', '04', '05', '06']\n  let histogramData = new Array(7).fill(0)\n  let lineChartData = new Array(7).fill(0)\n\n\n  React.useEffect(() => {\n    getData()\n  }, []);\n\n  function getData() {\n    let customers = json.customers\n    let orders = json.orders\n    setData({customers, orders})\n  }\n\n  if(data){\n    data.orders.forEach( (order) => {\n        histogramData[new Date(order.created).getDay()] = histogramData[new Date(order.created).getDay()] + 1\n        lineChartData[new Date(order.created).getDay()] = lineChartData[new Date(order.created).getDay()] + parseInt(order.price)\n    })\n  }\n  if (data == null) return  <div>Lodaing!!</div>\n  else\n  return (\n    <div className=\"App\">\n     <Row>\n        <Col xs={12} sm={12} md={6} lg={6}>\n          <Card className={classes.root}>\n            <CardHeader\n              title=\"Orders Count\"\n            />\n            <Divider />\n            <CardContent>\n          <Histogram labels ={labels} data = {histogramData} />\n            </CardContent>\n          </Card>\n          </Col>\n        <Col xs={12} sm={12} md={6} lg={6}>\n          <Card className={classes.root}>\n            <CardHeader\n              title=\"Orders Total Price\"\n            />\n            <Divider />\n            <CardContent>\n            <LineGraph labels ={labels} data = {lineChartData} />\n            </CardContent>\n          </Card>\n          </Col>\n      </Row>\n      <Row>\n        <Col xs={12} sm={12} md={6} lg={12}>\n          <Card className={classes.root}>\n            <CardHeader\n              title=\"Customers\"\n            />\n            <Divider />\n            <CardContent>\n          <Table customers={data.customers}/>\n            </CardContent>\n          </Card>\n          </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}